<%- | String  $email_to,
      String  $smtp_server,
      String  $smtp_port,
      String  $api_key,
      String  $url,
| -%>
#!/usr/local/rvm/rubies/ruby-2.6.3/bin/ruby
require 'net/smtp'
require 'json'
require 'rest-client'
require 'date'
require 'giphy'


def htmlMail()
return '
<html>
  <head>
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Simple Transactional Email</title>
  </head>
  <body>
    <h1>Problemy dna</h1>
    <ul>
'
end

def getProblems()
    from = Date.new(Time.new.year, Time.new.month, Time.new.day).to_time.to_i
    to   = from + 24*60*60
    payload = { "jsonrpc" => "2.0", "method" => "problem.get",  "params" => { "time_from" => "#{from}", "time_till" => "#{to}" }, "id" => 1, "auth" => "<%= $api_key -%>"}

    begin
       result = RestClient::Request.execute(:url => "<%= $url -%>", :method => "GET", :verify_ssl => false, :timeout => 10, :payload => payload.to_json, :headers => { "Content-Type" => "application/json"})
    rescue
       return []
    end
    return JSON.parse(result)['result']
end

def formatMessage(problems)
    message = ""
    pocitatko = 0
    problems.each do |problem|
       happend_at = DateTime.strptime(problem['clock'], "%s")
       tmp_text   = "<li>#{problem['name']} o #{happend_at.hour + 2}:#{happend_at.minute}:#{happend_at.second}</li>\n"
       message    += tmp_text
       pocitatko  += 1
    end
    if pocitatko == 0
        return ["<li>Poslusne hlasim, ze sa nic nestalo... Len ten krompac sme zlomili, ked sme zakopavali psa</li>", 0]
    end
    return [message, pocitatko]

end

def sendEmail(message)
    day   = Time.new.day
    month = Time.new.month
    year  = Time.new.year

    text_message = <<END_OF_MESSAGE
From: Daily reporter Zabbix <daily.reporter@zabbix.com>
To: CERIT <<%= $email_to -%>>
Subject: Daily report #{day}.#{month}.#{year} from Zabbix
Content-Type: text/html; charset="us-ascii"


#{htmlMail()}
#{message}
</ul>
<img src=\"#{gif}\"/>
</body>
</html>

END_OF_MESSAGE
    Net::SMTP.start('<%= $smtp_server -%>', <%= $smtp_port -%>) do |smtp|
       smtp.send_message text_message, 
       'daily.reporter@zabbix.com',
       '<%= $email_to -%>'
    end
end

def generateGif(numberOfMessages)
    Giphy::Configuration.configure do |config|
       config.api_key = "m6TrNdr0OUEunqWyElFMGOMmgmMt8IlU"
    end
    result = ""
    begin
    if numberOfMessages == 0
       result = Giphy.random('unbelievable')
    elsif numberOfMessages < 4
       result = Giphy.random('yes')
    elsif numberOfMessages < 11
       result = Giphy.random('not bad')
    else
       result = Giphy.random('no')
    end
    rescue Exception
       return result.image_url.to_s
    end
       return result.image_url.to_s
end



def main()
  problems = getProblems()
  result = formatMessage(problems)
  gif = generateGif(result[1])
  sendEmail(result[0], gif)
end

main()
